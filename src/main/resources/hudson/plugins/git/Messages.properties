# The MIT License
#
# Copyright (c) 2011, Oracle Corporation, Anton Kozak
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

GitSCM.Repository.MissedRepositoryExceptionMsg=At least one repository should be configured
GitSCM.Repository.IncorrectRepositoryFormatMsg=Invalid Git remote repository URL
GitSCM.Repository.CreationExceptionMsg=Error creating repositories

GitAPI.Repository.FailedInitTwiceMsg=.git directory already exists! Has it already been initialised?
GitAPI.Repository.SecurityFailureCheckMsg=Security error when trying to check for .git. Are you sure you have correct permissions?
GitAPI.Repository.FailedCheckMsg=Couldn't check for .git
GitAPI.Commit.FailedMsg=Cannot commit {0}
GitAPI.Repository.CloningRepositoryMsg=Cloning repository {0}
GitAPI.Workspace.FailedCleanupMsg=Failed to clean the workspace
GitAPI.Workspace.FailedDeleteMsg=Failed to delete workspace
GitAPI.Repository.CloneSuccessMsg={0} cloned successful to {1}
GitAPI.Repository.FailedCloneMsg=Could not clone {0}

GitAPI.Branch.CreateErrorMsg=Cannot create branch {0}
GitAPI.Branch.CheckoutErrorMsg=Could not checkout {0} with start point {1}
GitAPI.Branch.DeleteErrorMsg=Could not delete branch {0}
GitAPI.Repository.InvalidStateMsg=Repository doesn't exists or not properly initialized.
GitAPI.Branch.BranchInRepoMsg=Seen branch in repository {0}
